buildscript {
    ext {
        kotlinVersion = properties["kotlin.version"]
        springBootVersion = properties["spring.boot.version"]
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
        classpath("org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion")
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
    }
}

apply {
    plugin("kotlin") // kotlin-gradle-plugin: compile kotlin code
    plugin("kotlin-jpa")
    plugin("kotlin-spring")
    plugin('org.springframework.boot')
    plugin('io.spring.dependency-management')
}

bootJar.enabled = false
jar.enabled = true

sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenCentral()
    maven { setUrl("https://repo.spring.io/milestone") }
    maven { setUrl("https://repo.spring.io/snapshot") }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile("org.jetbrains.kotlin:kotlin-reflect")
    compile project(':domain')

    compile('org.springframework.boot:spring-boot-starter-web')

    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile("org.springframework:spring-jdbc")
    compile("com.fasterxml.jackson.core:jackson-databind")

    compile('org.springframework.boot:spring-boot-starter-security')

    runtime('com.h2database:h2')
    runtime('mysql:mysql-connector-java')

    testCompile('org.springframework.boot:spring-boot-starter-test')
}
